@using Neosoft.FAMS.Application.Features.Video.Queries.GetAll;
@model AddVideo;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var records = (VideoGetAllDto)ViewData["data"];
}
<head>
    <link rel="stylesheet" href="~/css/temp.css" />
    <script src="~/js/AddVideo.js"></script>
    <link rel="stylesheet" href="~/css/Creator/Add Video.css" />
</head>

<div class="container-fluid">

    <div class="row" style="background-color: #F5F5F5;">
        @Html.Partial("_CreatorSideBar")

        <div class="col pt-2">
            <div class="wrapper">
                <div id="formContent">
                    <!-- Tabs Titles -->
                    <h2>
                        <a href="" data-target="#sidebar" class="d-md-none"><i class="fa fa-bars"></i></a> Edit Video
                    </h2><br />
                    @using (Html.BeginForm("EditVideoView", "Creator", FormMethod.Post, new { enctype = "multipart/form-data" }))
                    {
                        <div class="row">
                            <div class="col">
                                <label>Video Thumbnail Image :  </label>
                                <span id="errorFileSize" class="text-danger"></span>
                            </div>
                            <div class="col" style="padding-right:57px">
                                <br />
                                <input asp-for="VideoImage" class="form-control" type="file" name="VideoImage" accept="image/*" id="videoThumbnail" onchange="readURL(this);" style="width: 300px;" />

                            </div>
                            <div class="col">
                                <img id="thumbnail" class="img-thumbnail" src="~/Uploads/Creators/Videos/@records.VideoImage" style="height:150px;width:150px;" alt="Thumbnail image" />
                            </div>
                        </div>

                        <br />
                        DateTime StartDate = (DateTime)records.StartDate;
                        DateTime EndDate = (DateTime)records.EndDate;
                        //DateTime CreatedOn = (DateTime)records.CreatedOn;
                        <div class="form-row">
                            <div class="form-group col-md-6">


                                <input id="VideoId" name="VideoId" value="@records.VideoId" type="hidden" readonly />

                                <input id="CreatedOn" name="CreatedOn" value="@records.CreatedOn" type="hidden" />
                                <input id="CreatedBy" name="CreatedBy" value="@records.CreatedBy" type="hidden" />
                                <input id="VideoId" name="VideoId" value="@records.VideoId" type="hidden" />
                                <input id="VideoTypeId" name="VideoTypeId" value="@records.VideoTypeId" type="hidden" />
                                <input id="PlayerTypeId" name="PlayerTypeId" value="@records.PlayerTypeId" type="hidden" />
                                <input id="VideoCategoryId" name="VideoCategoryId" value="@records.VideoCategoryId" type="hidden" />
                                <input id="VideoStatus" name="VideoStatus" value="@records.VideoStatus" type="hidden" />
                                <input id="PublishStatus" name="PublishStatus" value="@records.PublishStatus" type="checkbox" hidden />
                                <input id="IsDeleted" name="IsDeleted" value="@records.IsDeleted" type="hidden" />


                                <label>Video Title :  @Html.ValidationMessage("Title", "", new { @class = "text-danger" })</label>
                                <input asp-for="Title" type="text" class="form-control mb-2 mr-sm-2" id="txt_title" name="Title" placeholder="Title" value="@records.Title">
                                <br /><br />
                                <label>Video Description :  @Html.ValidationMessage("Decription", "", new { @class = "text-danger" })</label>
                                <textarea class="form-control mb-2 mr-sm-2" id="txt_desc" placeholder="Description" name="Decription">@records.Decription</textarea>
                                <div id="temp">
                                    <label id="lbl_mp4videoFile">
                                        MP4 Video File
                                    </label>

                                    <input class="form-control" type='file' name="UploadVideoPath" id="mp4videoFile" />

                                    <br />
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <label id="lbl">
                                    Start Time<sup style="color:red">*</sup>
                                    @Html.ValidationMessage("StartDate", "", new { @class = "text-danger" })
                                </label>
                                @Html.EditorFor(model => StartDate, new { htmlAttributes = new { @class = "form-control" } })

                                <br /><br />
                                <label id="lbl">
                                    End Time<sup style="color:red">*</sup>
                                    @Html.ValidationMessage("EndDate", "", new { @class = "text-danger" })
                                </label>
                                @Html.EditorFor(model => EndDate, new { htmlAttributes = new { @class = "form-control" } })

                                <br /><br /><br />
                                <label>Video Type</label>
                                @if (records.VideoTypeId == 1)
                                {
                                    <label class="btn btn-secondary">
                                        <input type="radio" name="VideoTypeId" id="option1" autocomplete="off" onclick="check(this.id)" value=true checked> Live
                                    </label>
                                    <label class="btn btn-secondary">
                                        <input type="radio" name="VideoTypeId" id="option2" autocomplete="off" onclick="check(this.id)" value=false> Pre-Recorded
                                    </label><br /><br /><br />
                                }
                                else
                                {
                                    <label class="btn btn-secondary">
                                        <input type="radio" name="VideoTypeId" id="option1" autocomplete="off" onclick="check(this.id)" value=false> Live
                                    </label>
                                    <label class="btn btn-secondary">
                                        <input type="radio" name="VideoTypeId" id="option2" autocomplete="off" onclick="check(this.id)" value=true checked> Pre-Recorded
                                    </label><br /><br /><br />
                                }
                                <label>Select Video Player:  @Html.ValidationMessage("PlayerTypeId", "", new { @class = "text-danger" })</label>
                                <select class="form-select" aria-label="Default select example" name="PlayerTypeId" id="selectVideo" required>
                                    @if (records.PlayerTypeId == 1)
                                    {
                                        <option value="1" selected>One</option>
                                        <option value="2">Two</option>
                                        <option value="3">Three</option>
                                    }
                                    else if (records.PlayerTypeId == 2)
                                    {
                                        <option value="1">One</option>
                                        <option value="2" selected>Two</option>
                                        <option value="3">Three</option>
                                    }
                                    else if (records.PlayerTypeId == 3)
                                    {
                                        <option value="1">One</option>
                                        <option value="2">Two</option>
                                        <option value="3" selected>Three</option>
                                    }
                                </select><br />

                                <label>MP4 Video URL :  @Html.ValidationMessage("VideoUrl", "", new { @class = "text-danger" })</label>
                                <input asp-for="VideoUrl" type="text" class="form-control mb-2 mr-sm-2" id="txt_VideoURL" name="VideoUrl" placeholder="Video URL" value="@records.VideoUrl">
                                <br />

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <button type="button" class="btn btn-secondary" id="btnCancel" onclick="window.location= '@Url.Action( "VideoTable", "Creator")'">Cancel</button>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
                            </div>
                            <div class="col-md-6">
                                <input type="submit" class="btn btn-primary" id="btnProceed" value="Save" />
                            </div>
                        </div>

                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="~/js/creatorSideBar.js"></script>
    function check(options) {
    if (document.getElementById(options) === document.getElementById("option1")) {
    document.getElementById("temp").style.display = "none";
    console.log(1);
    }
    else if (document.getElementById(options) === document.getElementById("option2")) {
    document.getElementById("temp").style.display = "block";
    console.log(1);
    }
    }
}

